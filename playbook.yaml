---
# ansible-playbook playbook.yaml --check --ask-pass --ask-become-pass --become --limit <host-group>
- hosts: all
  vars:
  remote_user: root
  tasks:
  - debug:
      msg: 3.1.2-Ensure packet redirect sending is disabled
  - sysctl:
      name: net.ipv4.conf.all.send_redirects
      value: 0
  - sysctl:
      name: net.ipv4.conf.default.send_redirects
      value: 0
  # - sysctl:
  #     name: net.ipv4.route.flush
  #     value: 1

  - debug:
      msg: 3.2.2-Ensure ICMP redirects are not accepted
  - sysctl:
      name: net.ipv4.conf.all.accept_redirects
      value: 0
  - sysctl:
      name: net.ipv4.conf.default.accept_redirects
      value: 0
  # - sysctl:
  #     name: net.ipv4.route.flush
  #     value: 1

  - debug:
      msg: 3.2.2-1-Ensure ICMP redirects are not accepted
  - sysctl:
      name: net.ipv4.conf.all.accept_redirects
      value: 0
  - sysctl:
      name: net.ipv4.conf.default.accept_redirects
      value: 0

  - debug:
      msg: 3.3.1-Ensure IPv6 router advertisements are not accepted
  - sysctl:
      name: net.ipv6.conf.all.accept_ra
      value: 0
  - sysctl:
      name: net.ipv6.conf.default.accept_ra
      value: 0

  - debug:
      msg: 3.3.1-1-Ensure IPv6 router advertisements are not accepted
  - sysctl:
      name: net.ipv6.conf.all.accept_ra
      value: 0
  - sysctl:
      name: net.ipv6.conf.default.accept_ra
      value: 0

  - debug:
      msg: 3.3.2-Ensure IPv6 redirects are not accepted
  - sysctl:
      name: net.ipv6.conf.all.accept_redirects
      value: 0
  - sysctl:
      name: net.ipv6.conf.default.accept_redirects
      value: 0

  - debug:
      msg: 3.3.2-1-Ensure IPv6 redirects are not accepted
  - sysctl:
      name: net.ipv6.conf.all.accept_redirects
      value: 0
  - sysctl:
      name: net.ipv6.conf.default.accept_redirects
      value: 0

  - debug:
      msg: 4.1.4-Ensure events that modify date and time information are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*time-change$'
      state: absent
    with_items:
      - /etc/audit/rules.d/time-change.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/time-change.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change'
      - '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change'
      - '-a always,exit -F arch=b64 -S clock_settime -k time-change'
      - '-a always,exit -F arch=b32 -S clock_settime -k time-change'
      - '-w /etc/localtime -p wa -k time-change'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change'
      - '-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change'
      - '-a always,exit -F arch=b64 -S clock_settime -k time-change'
      - '-a always,exit -F arch=b32 -S clock_settime -k time-change'
      - '-w /etc/localtime -p wa -k time-change'

  - debug:
      msg: 4.1.5-Ensure events that modify user/group information are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*identity$'
      state: absent
    with_items:
      - /etc/audit/rules.d/identity.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/identity.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /etc/group -p wa -k identity'
      - '-w /etc/passwd -p wa -k identity'
      - '-w /etc/gshadow -p wa -k identity'
      - '-w /etc/shadow -p wa -k identity'
      - '-w /etc/security/opasswd -p wa -k identity'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /etc/group -p wa -k identity'
      - '-w /etc/passwd -p wa -k identity'
      - '-w /etc/gshadow -p wa -k identity'
      - '-w /etc/shadow -p wa -k identity'
      - '-w /etc/security/opasswd -p wa -k identity'

  - debug:
      msg: 4.1.6-Ensure events that modify the system's network environment are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*system-locale$'
      state: absent
    with_items:
      - /etc/audit/rules.d/system-locale.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/system-locale.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - "-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale"
      - "-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale"
      - "-w /etc/issue -p wa -k system-locale"
      - "-w /etc/issue.net -p wa -k system-locale"
      - "-w /etc/hosts -p wa -k system-locale"
      - "-w /etc/sysconfig/network -p wa -k system-locale"
      - "-w /etc/sysconfig/network-scripts/ -p wa -k system-locale"
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - "-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale"
      - "-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale"
      - "-w /etc/issue -p wa -k system-locale"
      - "-w /etc/issue.net -p wa -k system-locale"
      - "-w /etc/hosts -p wa -k system-locale"
      - "-w /etc/sysconfig/network -p wa -k system-locale"
      - "-w /etc/sysconfig/network-scripts/ -p wa -k system-locale"

  - debug:
      msg: 4.1.7-Ensure events that modify the systems Mandatory Access Controls are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*MAC-policy$'
      state: absent
    with_items:
    - /etc/audit/rules.d/MAC-policy.rules
    - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/MAC-policy.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /etc/selinux/ -p wa -k MAC-policy'
      - '-w /usr/share/selinux/ -p wa -k MAC-policy'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /etc/selinux/ -p wa -k MAC-policy'
      - '-w /usr/share/selinux/ -p wa -k MAC-policy'

  - debug:
      msg: 4.1.9-Ensure session initiation information is collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*(logins|session)$'
      state: absent
    with_items:
      - /etc/audit/rules.d/logins.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/logins.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /var/log/wtmp -p wa -k logins'
      - '-w /var/log/btmp -p wa -k logins'
      - '-w /var/run/utmp -p wa -k session'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /var/log/wtmp -p wa -k logins'
      - '-w /var/log/btmp -p wa -k logins'
      - '-w /var/run/utmp -p wa -k session'

  - debug:
      msg: 4.1.10-Ensure discretionary access control permission modification events are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '(chmod|chown|setxattr).*perm_mod$'
      state: absent
    with_items:
      - /etc/audit/rules.d/perm_mod.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/perm_mod.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod'
      - '-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=1000 -F auid!=4294967295 -k perm_mod'

  - debug:
      msg: 4.1.11-Ensure unsuccessful unauthorized file access attempts are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*access$'
      state: absent
    with_items:
      - /etc/audit/rules.d/access.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/access.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access'
      - '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access'
      - '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access'
      - '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access'
- lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access'
      - '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -k access'
      - '-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access'
      - '-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -k access'

  - debug:
      msg: 4.1.13-Ensure successful file system mounts are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*mounts$'
      state: absent
    with_items:
      - /etc/audit/rules.d/mounts.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/mounts.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts'
      - '-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts'
      - '-a always,exit -F arch=b32 -S mount -F auid>=1000 -F auid!=4294967295 -k mounts'

  - debug:
      msg: 4.1.14-Ensure file deletion events by users are collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*delete$'
      state: absent
    with_items:
      - /etc/audit/rules.d/delete.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/delete.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete'
      - '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete'
      - '-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=1000 -F auid!=4294967295 -k delete'

  - debug:
      msg: 4.1.15-Ensure changes to system administration scope is collected
  - lineinfile:
      path: "{{ item }}"
      regexp: '.*scope$'
      state: absent
    with_items:
      - /etc/audit/rules.d/scope.rules
      - /etc/audit/audit.rules
  - lineinfile:
      path: /etc/audit/rules.d/scope.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /etc/sudoers -p wa -k scope'
      - '-w /etc/sudoers.d/ -p wa -k scope'
  - lineinfile:
      path: /etc/audit/audit.rules
      line: "{{ item }}"
      create: yes
    with_items:
      - '-w /etc/sudoers -p wa -k scope'
      - '-w /etc/sudoers.d/ -p wa -k scope'

  - debug:
      msg: 4.2.1.3-Ensure rsyslog default file permissions configured
  - find:
      paths: /etc/rsyslog.d/
      patterns: "*.conf"
      file_type: file
    register: conf_files
  - lineinfile:
      path: "{{ item.path }}"
      regexp: "^\\$FileCreateMode.*"
      state: absent
    with_items:
      - "{{ conf_files.files }}"
      - path: /etc/rsyslog.conf
  - lineinfile:
      path: "{{ item.path }}"
      line: "$FileCreateMode 0640"
      create: yes
    with_items:
      - "{{ conf_files.files }}"
      - path: /etc/rsyslog.conf

  - debug:
      msg: 5.1.2-Ensure permissions on /etc/crontab are configured
  - file:
      path: /etc/crontab
      state: file
      owner: root
      group: root
      mode: og-rwx

  - debug:
      msg: 5.1.3-Ensure permissions on /etc/cron.hourly are configured
  - file:
      path: /etc/cron.hourly
      state: directory
      owner: root
      group: root
      mode: og-rwx

  - debug:
      msg: 5.1.4-Ensure permissions on /etc/cron.daily are configured
  - file:
      path: /etc/cron.daily
      state: directory
      owner: root
      group: root
      mode: og-rwx

  - debug:
      msg: 5.1.5-Ensure permissions on /etc/cron.weekly are configured
  - file:
      path: /etc/cron.weekly
      state: directory
      owner: root
      group: root
      mode: og-rwx

  - debug:
      msg: 5.1.6-Ensure permissions on /etc/cron.monthly are configured
  - file:
      path: /etc/cron.monthly
      state: directory
      owner: root
      group: root
      mode: og-rwx

  - debug:
      msg: 5.1.7-Ensure permissions on /etc/cron.d are configured
  - file:
      path: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: og-rwx

  - debug:
      msg: 5.1.8-Ensure at/cron is restricted to authorized users
  - debug:
      msg: 5.1.8-1-Ensure at/cron is restricted to authorized users
  - file:
      path: "{{ item }}"
      state: absent
    with_items:
    - /etc/cron.deny
    - /etc/at.deny
  - file:
      path: "{{ item }}"
      state: touch
      owner: root
      group: root
      mode: og-rwx
    with_items:
    - /etc/cron.allow
    - /etc/at.allow

  - debug:
      msg: 5.2.4-Ensure SSH X11 forwarding is disabled
  - lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^X11Forwarding.*'
      state: absent
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: "X11Forwarding no"

  - debug:
      msg: 5.2.5-Ensure SSH MaxAuthTries is set to 4 or less
  - lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MaxAuthTries.*'
      state: absent
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: "MaxAuthTries 4"

  - debug:
      msg: 5.2.8-Ensure SSH root login is disabled
  - lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin.*'
      state: absent
  - lineinfile:
      path: /etc/ssh/sshd_config
      line: "PermitRootLogin no"
